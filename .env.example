# ==============================================================================
# Core
# ==============================================================================
# Choose settings module: dev / staging / prod
DJANGO_SETTINGS_MODULE=config.settings.dev

# Debug 1 for development, 0 in staging/prod
DEBUG=1

# Comma-separated list of allowed hosts
ALLOWED_HOSTS=localhost,127.0.0.1
# For prod/staging, override, e.g.:
# ALLOWED_HOSTS=api.example.com,www.example.com

# Full origins (with protocol) required for CSRF protection:
CSRF_TRUSTED_ORIGINS=http://localhost:8000
# CSRF_TRUSTED_ORIGINS=https://api.example.com,https://www.example.com

# Optional locale overrides
# LANGUAGE_CODE=en
# TZ=Europe/Warsaw

# ==============================================================================
# Database
# ==============================================================================
# Dev uses SQLite by default, no need to set DATABASE_URL.
# For Postgres/MySQL, uncomment and edit:
POSTGRES_DB=app
POSTGRES_USER=app
POSTGRES_PASSWORD=app
DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DB}"

# ------------------------------------------------------------------
# Redis (dev without password; prod via REDIS_PASSWORD_FILE)
# ------------------------------------------------------------------
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB_BROKER=0
REDIS_DB_BACKEND=0
REDIS_DB_CACHE=1

# ==============================================================================
# Email
# ==============================================================================
# Development: log emails to console
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
DEFAULT_FROM_EMAIL=noreply@example.com
# Production: real SMTP (uncomment and configure)
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# EMAIL_HOST=smtp.example.com
# EMAIL_PORT=587
# EMAIL_HOST_USER=apikey
# EMAIL_HOST_PASSWORD=super-secret
EMAIL_USE_TLS=True
EMAIL_USE_SSL=False

# ==============================================================================
# Django REST Framework
# ==============================================================================
API_PAGE_SIZE=20

# ==============================================================================
# OpenAPI (drf-spectacular)
# ==============================================================================
OPENAPI_TITLE="Mini e-commerce shop API project"
OPENAPI_VERSION=0.1.0
OPENAPI_SERVER_URL=http://localhost:8000
# In prod usually False (donâ€™t expose schema publicly)
OPENAPI_SERVE_INCLUDE_SCHEMA=True

# ==============================================================================
# Domain settings
# ==============================================================================
SHOP_SELLER_GROUP=seller

# ==============================================================================
# Celery / Redis
# ==============================================================================
# Dev: tasks run synchronously if CELERY_TASK_ALWAYS_EAGER=True
CELERY_TASK_ALWAYS_EAGER=False

# Example local Redis (staging/prod should point to real service):
# CELERY_BROKER_URL=redis://localhost:6379/0
# CELERY_RESULT_BACKEND=redis://localhost:6379/1
CELERY_TASK_DEFAULT_QUEUE=default
CELERY_WORKER_PREFETCH_MULTIPLIER=1
CELERY_TASK_ACKS_LATE=True
CELERY_TASK_REJECT_ON_WORKER_LOST=True
CELERY_TASK_SOFT_TIME_LIMIT=30
CELERY_TASK_TIME_LIMIT=60

# ==============================================================================
# Cache
# ==============================================================================
# Default is in-memory (locmem). Examples:
# CACHE_URL=redis://localhost:6379/2
# CACHE_URL=memcache://127.0.0.1:11211

# ==============================================================================
# Security (production overrides)
# ==============================================================================
# Enable these in prod/staging for HTTPS:
# SECURE_SSL_REDIRECT=True
# SECURE_HSTS_SECONDS=2592000  # 30 days
# SECURE_HSTS_INCLUDE_SUBDOMAINS=True
# SECURE_HSTS_PRELOAD=True
# SECURE_CONTENT_TYPE_NOSNIFF=True
# SECURE_REFERRER_POLICY=strict-origin-when-cross-origin
# SECURE_PROXY_SSL_HEADER=HTTP_X_FORWARDED_PROTO,https
# USE_X_FORWARDED_HOST=True
